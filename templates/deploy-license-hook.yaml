{{- if and .Values.hooks.getLicense.enabled .Values.licenseAcceptEula (not .Values.license) }}
{{- $name := include "common.tplvalues.render" ( dict "value" .Values.hooks.getLicense.name "context" $ ) -}}
{{- $licenseExists := include "secrets.exists" ( dict "secret" $name "context" $ ) -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": {{ .Values.hooks.getLicense.deletePolicy }}
    "helm.sh/hook-weight": "0"
data:
  {{- range $k, $v := .Values.hooks.getLicense.configuration }}
  {{ $k }}: |-
    {{- include "common.tplvalues.render" (dict "value" $v.content "context" $) | nindent 4 }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}-status
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
    "license-status": "{{ $licenseExists }}"
{{- if eq $licenseExists "false" }}
---
kind: Role
apiVersion: {{ include "common.capabilities.rbac.apiVersion" . }}
metadata:
  name: {{ $name }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": {{ .Values.hooks.getLicense.deletePolicy }}
    "helm.sh/hook-weight": "0"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
---
kind: RoleBinding
apiVersion: {{ include "common.capabilities.rbac.apiVersion" . }}
metadata:
  name: {{ $name }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": {{ .Values.hooks.getLicense.deletePolicy }}
    "helm.sh/hook-weight": "0"
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $name }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": {{ .Values.hooks.getLicense.deletePolicy }}
    "helm.sh/hook-weight": "0"
spec:
  template:
    metadata:
      name: {{ $name }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Never
      {{- include "deploy.imagePullSecrets" . | nindent 6 }}
      initContainers:
        - name: eula-get-license-job
          image: {{ template "common.images.image" ( dict "imageRoot" .Values.master.image "global" .Values.global "context" .) }}
          imagePullPolicy: {{ .Values.master.image.pullPolicy | quote }}
          {{- if .Values.hooks.getLicense.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.hooks.getLicense.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.hooks.getLicense.getCommand "context" $) | nindent 12 }}
          volumeMounts:
            - name: shared-data
              mountPath: /opt/xebialabs/xl-deploy-server/conf
            {{- range $k, $v := .Values.hooks.getLicense.configuration }}
            - name: configuration
              mountPath: /opt/xebialabs/xl-deploy-server/{{ $v.path }}
              subPath: {{ $v.path }}
            {{- end }}
      containers:
        - name: eula-install-license-job
          image: {{ template "common.images.image" ( dict "imageRoot" .Values.hooks.getLicense.image "global" .Values.global "context" .) }}
          imagePullPolicy: {{ .Values.hooks.getLicense.image.pullPolicy | quote }}
          {{- if .Values.hooks.getLicense.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.hooks.getLicense.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.hooks.getLicense.installCommand "context" $) | nindent 12 }}
          volumeMounts:
            - name: shared-data
              mountPath: /opt/xebialabs/xl-deploy-server/conf
            {{- range $k, $v := .Values.hooks.getLicense.configuration }}
            - name: configuration
              mountPath: /opt/xebialabs/xl-deploy-server/{{ $v.path }}
              subPath: {{ $v.path }}
            {{- end }}
      volumes:
        - name: shared-data
          emptyDir: {}
        {{- if .Values.hooks.getLicense.configuration }}
        - name: configuration
          configMap:
            name: {{ $name }}
            items:
              {{- range $k, $v := .Values.hooks.getLicense.configuration }}
              - key: {{ $k }}
                path: {{ $v.path }}
                {{- if $v.mode}}
                mode: {{ $v.mode }}
                {{- end }}
              {{- end }}
        {{- end }}
{{- end }}
{{- end }}
