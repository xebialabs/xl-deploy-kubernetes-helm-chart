{{- if .Values.oidc.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: xl-deploy-server
  labels:
    app: {{ template "xl-deploy.name" . }}
    chart: {{ template "xl-deploy.chart" . }}
    release: {{ .Release.Name }}
data:
  deploy-server.yaml.template: |
    deploy.server:
      license:
        daysBeforeWarning: 10
      security:
        auth:
          provider: "oidc"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: xl-deploy-keycloak
  labels:
    app: {{ template "xl-deploy.name" . }}
    chart: {{ template "xl-deploy.chart" . }}
    release: {{ .Release.Name }}
data:
  deploy-oidc.yaml: |
    deploy.security:
      auth:
        providers:
          oidc:
           {{- if .Values.oidc.external }}
            clientId: {{ .Values.oidc.clientId | quote }}
            clientSecret: {{ .Values.oidc.clientSecret | quote }}
            {{- if .Values.oidc.clientAuthMethod }}
            clientAuthMethod: {{ .Values.oidc.clientAuthMethod | quote }}
            {{- end }}
            {{- if .Values.oidc.clientAuthJwt.enable }}
            clientAuthJwt:
              jwsAlg: {{ .Values.oidc.clientAuthJwt.jwsAlg | quote }}
              tokenKeyId: {{ .Values.oidc.clientAuthJwt.tokenKeyId | quote }}
              {{- if .Values.oidc.clientAuthJwt.keyStore.enable }}
              keyStore:
                path: {{ .Values.oidc.clientAuthJwt.keyStore.path | quote }}
                password: {{ .Values.oidc.clientAuthJwt.keyStore.password | quote }}
                type: {{ .Values.oidc.clientAuthJwt.keyStore.type | quote }}
              {{- end }}
              {{- if .Values.oidc.clientAuthJwt.key.enable }}
              key:
                alias: {{ .Values.oidc.clientAuthJwt.key.alias | quote }}
                password: {{ .Values.oidc.clientAuthJwt.key.password | quote }}
              {{- end }}
             {{- end }}
            issuer: {{ .Values.oidc.issuer | quote }}
            keyRetrievalUri: {{ .Values.oidc.keyRetrievalUri | quote }}
            accessTokenUri: {{ .Values.oidc.accessTokenUri | quote }}
            userAuthorizationUri: {{ .Values.oidc.userAuthorizationUri | quote }}
            logoutUri: {{ .Values.oidc.logoutUri | quote }}
            redirectUri: {{ .Values.oidc.redirectUri | quote }}
            postLogoutRedirectUri: {{ .Values.oidc.postLogoutRedirectUri | quote }}
            rolesClaimName: {{ .Values.oidc.rolesClaimName | quote }}
            userNameClaimName: {{ .Values.oidc.userNameClaimName | quote }}
            {{- if .Values.oidc.scopes }}
            scopes: {{ .Values.oidc.scopes }}
            {{- end }}
            {{- if .Values.oidc.idTokenJWSAlg }}
            idTokenJWSAlg: {{ .Values.oidc.idTokenJWSAlg | quote }}
            {{- end }}
            {{- if .Values.oidc.accessToken.enable }}
            access-token:
              {{- if .Values.oidc.accessToken.issuer }}
              issuer: {{ .Values.oidc.accessToken.issuer | quote }}
              {{- end }}
              {{- if .Values.oidc.accessToken.audience }}
              audience: {{ .Values.oidc.accessToken.audience | quote }}
              {{- end }}
              {{- if .Values.oidc.accessToken.keyRetrievalUri }}
              keyRetrievalUri: {{ .Values.oidc.accessToken.keyRetrievalUri | quote }}
              {{- end }}
              {{- if .Values.oidc.accessToken.jwsAlg }}
              jwsAlg: {{ .Values.oidc.accessToken.jwsAlg | quote }}
              {{- end }}
              {{- if .Values.oidc.accessToken.secretKey }}
              secretKey: {{ .Values.oidc.accessToken.secretKey | quote }}
              {{- end }}
            {{- end }}
            loginMethodDescription: {{ default "External login (OpenID Connect)" .Values.oidc.loginMethodDescription | quote }}
            {{- if .Values.oidc.proxyHost }}
            proxyHost: {{ .Values.oidc.proxyHost | quote }}
            {{- end }}
            {{- if .Values.oidc.proxyPort }}
            proxyPort: {{ .Values.oidc.proxyPort | quote }}
            {{- end }}
            {{- else }}
            clientId: "deploy"
            clientSecret: "2c89c720-009c-428f-b815-4e488674176c"
            {{- range .Values.keycloak.ingress.rules }}
            issuer: "http{{ if $.Values.keycloak.ingress.tls }}s{{ end }}://{{ .host }}/auth/realms/digitalai-platform"
            keyRetrievalUri: "http{{ if $.Values.keycloak.ingress.tls }}s{{ end }}://{{ .host }}/auth/realms/digitalai-platform/protocol/openid-connect/certs"
            accessTokenUri: "http{{ if $.Values.keycloak.ingress.tls }}s{{ end }}://{{ .host }}/auth/realms/digitalai-platform/protocol/openid-connect/token"
            userAuthorizationUri: "http{{ if $.Values.keycloak.ingress.tls }}s{{ end }}://{{ .host }}/auth/realms/digitalai-platform/protocol/openid-connect/auth"
            logoutUri: "http{{ if $.Values.keycloak.ingress.tls }}s{{ end }}://{{ .host }}/auth/realms/digitalai-platform/protocol/openid-connect/logout"
            {{- end }}
            {{- range .Values.ingress.hosts }}
            redirectUri: "http{{ if $.Values.ingress.tls }}s{{ end }}://{{ . }}/login/external-login"
            postLogoutRedirectUri: "http{{ if $.Values.ingress.tls }}s{{ end }}://{{ . }}/oauth2/authorization/xl-deploy"
            {{- end }}
            rolesClaimName: "groups"
            userNameClaimName: "preferred_username"
            {{- end }}
{{- end }}
