apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "xl-deploy.fullname" . }}-cc-server
  labels:
    chart: {{ template "xl-deploy.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.centralConfiguration.replicas }}
  selector:
    matchLabels:
      app: {{ template "xl-deploy.name" . }}
      component: {{ template "xl-deploy.name" . }}-cc-server
      release: {{ .Release.Name }}
  serviceName: {{ template "xl-deploy.fullname" . }}-cc-server
  template:
    metadata:
      labels:
        app: {{ template "xl-deploy.name" . }}
        component: {{ template "xl-deploy.name" . }}-cc-server
        release: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 10001
      {{- if .Values.ImagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.ImagePullSecret }}
      {{- end }}
      {{- if or (and (eq .Values.centralConfiguration.migrateFromEmbedded "true") (eq .Values.Persistence.Enabled true)) }}
      initContainers:
        - name: wait-for-migrate-from-embedded-cc-to-standalone
          image: "{{ .Values.centralConfiguration.image.repository }}:{{ .Values.ImageTag }}"
          imagePullPolicy: "{{ .Values.ImagePullPolicy }}"
          command: ["sh", "/opt/xebialabs/central-configuration-server/bin/migrate-from-embedded-cc-to-standalone.sh"]
          volumeMounts:
            - mountPath: "/mnt/centralConfiguration-source-dir"
              name: source-dir
            - mountPath: "/mnt/centralConfiguration-target-dir"
              name: data-dir
      {{- end }}
      containers:
        - name: cc-server
          image: "{{ .Values.centralConfiguration.image.repository }}:{{ .Values.ImageTag }}"
          imagePullPolicy: "{{ .Values.ImagePullPolicy }}"
          ports:
            - name: http
              containerPort: 8888
              protocol: TCP
          {{- if .Values.deploy.configurationManagement.centralConfiguration.configuration.enabled }}
          command:
            - sh
            - -c
            - >
              {{- range $.Values.deploy.configurationManagement.centralConfiguration.configuration.resetFiles }}
              rm -fv /opt/xebialabs/central-configuration-server/conf/{{ . }};
              {{- end }}
              echo "Finished reset of the conf files"; 
              mkdir /opt/xebialabs/central-configuration-server/xld-configuration-management/; 
              ORIGINAL_PWD=$(pwd);
              cd /opt/xebialabs/central-configuration-server/xld-configuration-management/; 
              cp /opt/xebialabs/xld-configuration-management/* .; chmod +x *.sh; 
              [ -x ./op-configuration-management.sh ] && ./op-configuration-management.sh;
              cd $ORIGINAL_PWD;
              echo "Finished central configuration server configuration management";
              /opt/xebialabs/tini -s -- /opt/xebialabs/central-configuration-server/bin/run-in-container.sh
          {{- end }}
          volumeMounts:
            {{- if .Values.oidc.enabled }}
            - name: deploy-server
              mountPath: /opt/xebialabs/central-configuration-server/central-conf/deploy-server.yaml.template
              subPath: deploy-server.yaml.template
            - name: deploy-keycloak
              mountPath: /opt/xebialabs/central-configuration-server/centralConfiguration/deploy-oidc.yaml
              subPath: deploy-oidc.yaml
            {{- end }}
            - name: data-dir
              mountPath: /opt/xebialabs/central-configuration-server/centralConfiguration
              subPath: centralConfiguration
            - name: data-dir
              mountPath: /opt/xebialabs/central-configuration-server/conf
              subPath: conf
            {{- if .Values.deploy.configurationManagement.centralConfiguration.volumeMounts.enabled }}
            {{- range $key, $val := .Values.deploy.configurationManagement.centralConfiguration.volumeMounts.paths }}
            - name: data-dir
              mountPath: /opt/xebialabs/central-configuration-server/{{ $key }}
              subPath: {{ $val }}
            {{- end }}
            {{- end }}
            {{- if .Values.deploy.configurationManagement.centralConfiguration.configuration.enabled }}
            - name: xld-cc-configuration-management-volume
              mountPath: /opt/xebialabs/xld-configuration-management
            {{- end }}
          env:
            - name: XL_CLUSTER_MODE
              value: default
            {{- if .Values.UseExistingDB.Enabled }}
            - name: XL_DB_URL
              value: {{.Values.UseExistingDB.XL_DB_URL | quote}}
            - name: XL_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "xl-deploy.fullname" . }}
                  key: databaseUsername
            - name: XL_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "xl-deploy.fullname" . }}
                  key: databasePassword
            {{- else }}
            {{- if .Values.postgresql.install }}
            - name: XL_DB_URL
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/xld-db
            - name: XL_DB_USERNAME
              value: xld
            - name: XL_DB_PASSWORD
              value: "xld"
            {{- end }}
            {{- end }}
            - name: XL_METRICS_ENABLED
              value: "false"
            - name: XLD_IN_PROCESS
              value: "false"
            - name: HOSTNAME_SUFFIX
              value: ".{{ template "xl-deploy.fullname" . }}-master.{{.Release.Namespace}}.svc.cluster.local"
            {{- if .Values.rabbitmq.install }}
            - name: XLD_TASK_QUEUE_USERNAME
              value: {{ .Values.rabbitmq.auth.username }}
            - name: XLD_TASK_QUEUE_PASSWORD
              value: {{ .Values.rabbitmq.auth.password }}
            - name: XLD_TASK_QUEUE_URL
              value: "amqp://{{ .Release.Name }}-rabbitmq.{{ .Release.Namespace }}.svc.cluster.local:5672/%2F"
            - name: XLD_TASK_QUEUE_DRIVER_CLASS_NAME
              value: "com.rabbitmq.jms.admin.RMQConnectionFactory"
            {{- else }}
            {{- if .Values.UseExistingMQ.Enabled }}
            - name: XLD_TASK_QUEUE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "xl-deploy.fullname" . }}
                  key: rabbitmqUsername
            - name: XLD_TASK_QUEUE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "xl-deploy.fullname" . }}
                  key: rabbitmqPassword
            - name: XLD_TASK_QUEUE_URL
              value: {{ .Values.UseExistingMQ.XLD_TASK_QUEUE_URL | quote }}
            - name: XLD_TASK_QUEUE_DRIVER_CLASS_NAME
              value: {{ .Values.UseExistingMQ.XLD_TASK_QUEUE_DRIVER_CLASS_NAME }}
            {{- end }}
            {{- end }}
            {{- if .Values.satellite.Enabled }}
            - name: ENABLE_SATELLITE
              value: {{ .Values.satellite.Enabled | quote }}
            {{- end }}
            - name: CENTRAL_CONFIG_ENCRYPT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "xl-deploy.fullname" . }}
                  key: centralConfigEncryptKey
            {{- if .Values.deploy.configurationManagement.centralConfiguration.environment.enabled }}
            {{- range $key, $val := .Values.deploy.configurationManagement.centralConfiguration.environment.variables }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
      volumes:
        {{- if eq .Values.Persistence.Enabled true }}
        {{- if eq .Values.centralConfiguration.migrateFromEmbedded "true" }}
        - name: source-dir
          persistentVolumeClaim:
            claimName: data-dir-{{ template "xl-deploy.fullname" . }}-master-0
        {{- end }}
        {{- else }}
        - name: data-dir
          emptyDir: { }
        {{- end }}
        {{- if .Values.oidc.enabled }}
        - name: deploy-server
          configMap:
            name: xl-deploy-server
        - name: deploy-keycloak
          configMap:
            name: xl-deploy-keycloak
        {{- end }}
        {{- if .Values.deploy.configurationManagement.centralConfiguration.configuration.enabled }}
        - name: xld-cc-configuration-management-volume
          configMap:
            name: xld-cc-configuration-management-script
        {{- end }}
  {{- if .Values.Persistence.Enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data-dir
      spec:
        accessModes: [ {{.Values.Persistence.AccessMode}} ]
      {{- if .Values.Persistence.StorageClass }}
      {{- if (eq "-" .Values.Persistence.StorageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.Persistence.StorageClass }}"
      {{- end }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.centralConfiguration.persistence.pvcSize | quote }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "xl-deploy.fullname" . }}-cc-server
  labels:
    app: {{ template "xl-deploy.name" . }}
    component: {{ template "xl-deploy.name" . }}-cc-server
    chart: {{ template "xl-deploy.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: ClusterIP
  ports:
    - name: cc-server-http
      port: 8888
      protocol: TCP
  selector:
    app: {{ template "xl-deploy.name" . }}
    component: {{ template "xl-deploy.name" . }}-cc-server
    release: {{ .Release.Name }}
