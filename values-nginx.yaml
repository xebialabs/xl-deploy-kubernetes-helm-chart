# Default values for xl-deploy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Platform on which to install the chart (PlainK8s/AWSEKS/AzureAKS/GoogleGKE)
K8sSetup:
  Platform: PlainK8s

# No. of XL-Deploy master and worker pods to run.
XldMasterCount: 3
XldWorkerCount: 3

## XL-Deploy image version
## Ref: https://hub.docker.com/r/xebialabs/xl-deploy/tags
ServerImageRepository: "xebialabs/xl-deploy"
WorkerImageRepository: "xebialabs/deploy-task-engine"
ImageTag: "10.2.4"

## Specify a imagePullPolicy
## Defaults to 'Always' if image tag is 'latest',set to 'IfNotPresent'
ImagePullPolicy: "Always"

## Secrets must be manually created in the namespace.
# ImagePullSecret: xlDeploy

## Install nginx subchart. If you have nginx already installed, set 'install' to 'false'.
## If you have any other ingress controller installed, you can set the 'install' to 'false'.
## Ref: https://github.com/bitnami/charts/blob/master/bitnami/nginx-ingress-controller/README.md
nginx-ingress-controller:
  install: true
  image:
    pullSecrets: []
  replicaCount: 1
  resources:
    limits: {}
    #   cpu: 100m
    #   memory: 128Mi
    requests: {}
    #   cpu: 100m
    #   memory: 128Mi
  service:
    type: NodePort

haproxy-ingress:
  install: false

## Ingress Configuration
## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
## Ref: https://docs.nginx.com/nginx-ingress-controller/configuration/ingress-resources/advanced-configuration-with-annotations/#general-customization
ingress:
  Enabled: true
  annotations:
    # ingress.kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-name: SESSION_XLD
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
  path: /
  hosts:
    - example.com

#  tls:
#    - secretName: example-secretsName
#      hosts:
#        - example.com

# https://docs.xebialabs.com/v.10.2/deploy/docker/docker-environment-variables/
AdminPassword:
  # Provide the admin password to be used

xldLicense:
# Convert xl-deploy.lic files content to base64 ( cat xl-deploy.lic | base64 -w 0 ) and put the output here

RepositoryKeystore:
# https://docs.xebialabs.com/v.10.2/deploy/how-to/changing-passwords-in-xl-deploy/
# Convert repository-keystore.jceks files content to base64 ( cat repository-keystore.jceks | base64 -w 0 ) and put the output here

KeystorePassphrase:
# Passphrase for repository-keystore.jceks file

CentralConfigEncryptKey:
# spring cloud config encryption key

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 3
  #  memory: 3Gi
  # requests:
  #  cpu: 0.7
  #  memory: 1700Mi

## Ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/README.md
## Install postgresql chart. If you have an existing database deployment, set 'install' to 'false'.
postgresql:
  install: true
  initdbScriptsSecret: "postgresql-init-sql-xld"
  image:
    pullSecrets: []
  persistence:
    enabled: true
    storageClass: "-"
    size: 8Gi
    existingClaim: ""
  postgresqlUsername: postgres
  postgresqlPassword: ""
  postgresqlMaxConnections: "300"
  service:
    type: ClusterIP
    port: 5432
  resources:
    requests:
      memory: 256Mi
      cpu: 250m

# https://docs.xebialabs.com/v.10.2/deploy/how-to/configure-the-xl-deploy-sql-repository/
UseExistingDB:
  Enabled: false
  # If you want to use an existing database, set 'postgresql.install' to 'false' and 'UseExistingDB.Enabled' to 'true'.
  # Uncomment the following lines and provide the values.
  # XL_DB_URL:
  # XL_DB_USERNAME:
  # XL_DB_PASSWORD:

## Install rabbitmq chart. If you have an existing message queue deployment, set 'install' to 'false'.
## ref: https://github.com/bitnami/charts/blob/master/bitnami/rabbitmq/README.md
rabbitmq:
  install: true
  replicaCount: 3
  image:
    pullSecrets: []
  auth:
    username: guest
    password: guest
    erlangCookie: DEPLOYRABBITMQCLUSTER
  extraPlugins: 'rabbitmq_jms_topic_exchange'
  extraSecrets:
    xld-load-definition:
      xld-load_definition.json: |
        {
        "users": [
          {
              "name": "{{ .Values.auth.username }}",
              "password": "{{ .Values.auth.password }}",
              "tags": "administrator"
          }
          ],
        "vhosts": [
          {
            "name": "/"
          }
          ],
          "permissions": [
          {
            "user": "{{ .Values.auth.username }}",
            "vhost": "/",
            "configure": ".*",
            "write": ".*",
            "read": ".*"
          }
          ],
        "global_parameters": [
          {
            "name": "cluster_name",
            "value": ""
          }
          ],
         "policies": [
            {
              "name": "ha-all",
              "apply-to": "all",
              "pattern": ".*",
              "vhost": "/",
              "definition": {
                "ha-mode": "all",
                "ha-sync-mode": "automatic",
                "ha-sync-batch-size": 1
              }
            }
          ]
        }
  loadDefinition:
    enabled: true
    existingSecret: xld-load-definition
  extraConfiguration: |
    load_definitions = /app/xld-load_definition.json
  persistence:
    enabled: true
    storageClass: "-"
    size: 8Gi
  service:
    type: ClusterIP
  volumePermissions:
    enabled: true

# https://docs.xebialabs.com/v.10.2/deploy/how-to/configure-task-queueing/
UseExistingMQ:
  Enabled: false
  # If you want to use a existing Message Queue, change the "rabbitmq.install to false"
  # Set 'UseExistingMQ.Enabled' to 'true'.Uncomment the following lines and provide the values.
  # XLD_TASK_QUEUE_USERNAME:
  # XLD_TASK_QUEUE_PASSWORD:
  # XLD_TASK_QUEUE_URL:
  # XLD_TASK_QUEUE_DRIVER_CLASS_NAME:

## Configure extra options for liveness and readiness probes
HealthProbes: true
HealthProbesLivenessTimeout: 60
HealthProbesReadinessTimeout: 60
HealthProbeFailureThreshold: 12
HealthPeriodScans: 10

nodeSelector: {}

tolerations: []

## Affinity and anti-affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## XL Deploy data Persistent Volume for 'XL Deploy export'
## If "Persistence.Enabled" set to "false", it will use hostPath.
Persistence:
  Enabled: true
  ## Choose storage class provided by your cloud provider, example "ssd" on GKE, AWS and OpenStack
  StorageClass: "-"
  Annotations: {}
  AccessMode: ReadWriteOnce
  XldMasterPvcSize: 10Gi
  XldWorkerPvcSize: 10Gi

# Set "satellite.Enabled" value to "true" to use the "XL Satellite" feature
satellite:
  Enabled: false

oidc:
  enabled: false
  clientId:
  clientSecret:
  issuer:
  keyRetrievalUri:
  accessTokenUri:
  userAuthorizationUri:
  logoutUri:
  redirectUri:
  postLogoutRedirectUri:
  rolesClaimName:
  userNameClaimName:

centralConfiguration:
  replicas: 1
  image:
    repository: xebialabs/central-configuration
    tag: 22.0.1
    pullPolicy: "Always"
  #    pullSecret:
  persistence:
    enabled: true
    storageClass: "-"
    annotations: { }
    pvcSize: 500M
  migrateFromEmbedded: false
