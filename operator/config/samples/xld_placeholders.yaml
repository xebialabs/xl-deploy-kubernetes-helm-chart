apiVersion: xld.digital.ai/v1alpha1
kind: DigitalaiDeploy
metadata:
    name: daid-placeholders
spec:
  k8sSetup:
    platform: Openshift
  auth:
    adminPassword: '<mandatory-admin-password>'
  licenseAcceptEula: true
  license: '<license>'
  keystore:
    passphrase: '<mandatory-keystore-passphrase>'
    keystore: '<mandatory-enter base64 encoded keystore>'
  external:
    db:
      enabled: false
      main:
        url: jdbc:postgresql://<xld-db-host>:5432/<xld-database-name>
        username: <xld-username>
        password: |-
          <xld-password>
        maxPoolSize: 10
      report:
        url: jdbc:postgresql://<xld-report-db-host>:5432/<xld-report-database-name>
        username: <xld-report-username>
        password: |-
          <xld-report-password>
        maxPoolSize: 10
    mq:
      enabled: false
      url: <queue-url>
      queueName: <queue-name>
      username: <username>
      password: |-
        <password>
      driverClassName: <driver-class-name>
      queueType: <classic-or-quorum>
  oidc:
    enabled: false
    accessTokenUri: ""
    clientId: ""
    clientSecret: ""
    emailClaim: ""
    issuer: ""
    keyRetrievalUri: ""
    logoutUri: ""
    postLogoutRedirectUri: ""
    redirectUri: ""
    rolesClaimName: ""
    userAuthorizationUri: ""
    userNameClaimName: ""
    fullNameClaim: ""
    scopes: '["openid"]'
  ssl:
    enabled: false
    keystorePassword: ''
    keystoreKeypassword: ''
    keystoreType: ''
    keystore: ''
  hooks:
    genSelfSigned:
      enabled: false
    getLicense:
      enabled: true
  centralConfiguration:
    replicaCount: 1
    diagnosticMode:
      enabled: false
  master:
    replicaCount: <deploy-master-replica-count>
    persistence:
      storageClass: '<mandatory-deploy-storage-class-rwo>'
      accessModes:
        - ReadWriteOnce
      size: '<deploy-master-storage-size>'
    volumePermissions:
      enabled: false
    diagnosticMode:
      enabled: false
  worker:
    replicaCount: <deploy-worker-replica-count>
    persistence:
      storageClass: '<mandatory-deploy-storage-class-rwo>'
      accessModes:
        - ReadWriteOnce
      size: '<deploy-worker-storage-size>'
    volumePermissions:
      enabled: false
    diagnosticMode:
      enabled: false
  ingress:
    enabled: false
  route:
    enabled: true
    annotations:
      haproxy.router.openshift.io/cookie_name: SESSION_XLD
      haproxy.router.openshift.io/disable_cookies: "false"
      haproxy.router.openshift.io/rewrite-target: /
    hostname: '<mandatory-deploy-hostname>'
    path: /
    tls:
      enabled: true
      termination: edge
  haproxy-ingress:
    install: false
  nginx-ingress-controller:
    install: false
  postgresql:
    install: true
    primary:
      persistence:
        size: '<postgresql-storage-size>'
        storageClass: '<postgresql-storage-class-rwo>'
    securityContext:
      enabled: true
      fsGroup: 1001
  rabbitmq:
    install: true
    persistence:
      size: '<rabbitmq-storage-size>'
      storageClass: '<rabbitmq-storage-class-rwo>'
    replicaCount: <rabbitmq-replica-count>
    volumePermissions:
      enabled: true
    securityContext:
      enabled: true
      fsGroup: 1001
    podSecurityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001
