"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[500],{524:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var i=t(4848),o=t(8453);const l={sidebar_position:14},r="Make custom configuration for the Deploy",a={id:"make-custom-configuration",title:"Make custom configuration for the Deploy",description:"This is internal documentation. This document can be used only if it was recommended by the Support Team.",source:"@site/docs/make-custom-configuration.md",sourceDirName:".",slug:"/make-custom-configuration",permalink:"/xl-deploy-kubernetes-helm-chart/docs/make-custom-configuration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"Building the operator image from helm chart",permalink:"/xl-deploy-kubernetes-helm-chart/docs/building-operator-image"},next:{title:"Manual integration with the Identity Service",permalink:"/xl-deploy-kubernetes-helm-chart/docs/integrating-with-identity-service"}},s={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Custom configuration of deployit-security.xml from master pods",id:"custom-configuration-of-deployit-securityxml-from-master-pods",level:2},{value:"Steps",id:"steps",level:3},{value:"Custom configuration of deployit.conf.template from master pods",id:"custom-configuration-of-deployitconftemplate-from-master-pods",level:2},{value:"Steps",id:"steps-1",level:3},{value:"Custom configuration of deploy-server.yaml.template from cc pods",id:"custom-configuration-of-deploy-serveryamltemplate-from-cc-pods",level:2},{value:"Steps",id:"steps-2",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"make-custom-configuration-for-the-deploy",children:"Make custom configuration for the Deploy"}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"This is internal documentation. This document can be used only if it was recommended by the Support Team."})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"From 23.3 version this document is outdated. Use official Digital.ai documentation."})}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Running Deploy installation on k8s cluster"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"kubectl"})," connected to the cluster"]}),"\n",(0,i.jsxs)(n.li,{children:["Deploy operator with the following versions or above:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"10.2.18"}),"\n",(0,i.jsx)(n.li,{children:"10.3.16"}),"\n",(0,i.jsx)(n.li,{children:"22.0.8"}),"\n",(0,i.jsx)(n.li,{children:"22.1.6"}),"\n",(0,i.jsx)(n.li,{children:"22.2.2"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"custom-configuration-of-deployit-securityxml-from-master-pods",children:"Custom configuration of deployit-security.xml from master pods"}),"\n",(0,i.jsx)(n.h3,{id:"steps",children:"Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Download current template configuration file that exists on master Deploy pod that is running.\nFor example, if you want to update deployit-security.xml, it is in the ",(0,i.jsx)(n.code,{children:"/opt/xebialabs/xl-deploy-server/conf/deployit-security.xml"})," in master pod."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl cp digitalai/dai-xld-digitalai-deploy-master-0:/opt/xebialabs/xl-deploy-server/conf/deployit-security.xml .\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Update the CR file or CR on the cluster"}),"\n",(0,i.jsxs)(n.p,{children:["Use that file to update your CR file under ",(0,i.jsx)(n.code,{children:"spec.deploy.configurationManagement.master.configuration.scriptData"})," path. Add there the content of the ",(0,i.jsx)(n.code,{children:"deployit-security.xml"})," file under the ",(0,i.jsx)(n.code,{children:"deployit-security.xml"})," key."]}),"\n",(0,i.jsxs)(n.p,{children:["Also update the script under the ",(0,i.jsx)(n.code,{children:"spec.deploy.configurationManagement.master.configuration.script"})," path. Add there"]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'...\n        script: |-\n          ...\n          cp /opt/xebialabs/xl-deploy-server/xld-configuration-management/deployit-security.xml /opt/xebialabs/xl-deploy-server/conf/deployit-security.xml && echo "Changing the deployit-security.xml";\n        scriptData:\n          ...\n          deployit-security.xml: |-\n            <?xml version="1.0" encoding="UTF-8"?>\n            ...\n'})}),"\n",(0,i.jsx)(n.p,{children:"Note: This is the example of master configuration. Under spec.deploy.configurationManagement there are also worker and centralConfiguration sections."}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Save and apply changes from the CR file. Restart pods."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl rollout restart sts dai-xld-digitalai-deploy-master -n digitalai\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"custom-configuration-of-deployitconftemplate-from-master-pods",children:"Custom configuration of deployit.conf.template from master pods"}),"\n",(0,i.jsx)(n.h3,{id:"steps-1",children:"Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Download current template configuration file that exists on master Deploy pod that is running.\nFor example, if you want to update deployit-security.xml, it is in the ",(0,i.jsx)(n.code,{children:"/opt/xebialabs/xl-deploy-server/default-conf/deployit.conf.template"})," in master pod."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl cp digitalai/dai-xld-digitalai-deploy-master-0:/opt/xebialabs/xl-deploy-server/default-conf/deployit.conf.template .\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Update the CR file or CR on the cluster"}),"\n",(0,i.jsxs)(n.p,{children:["Use that file to update your CR file under ",(0,i.jsx)(n.code,{children:"spec.deploy.configurationManagement.master.configuration.scriptData"})," path. Add there the content of the ",(0,i.jsx)(n.code,{children:"deployit.conf.template"})," file under the ",(0,i.jsx)(n.code,{children:"deployit.conf.template"})," key."]}),"\n",(0,i.jsxs)(n.p,{children:["Also update the script under the ",(0,i.jsx)(n.code,{children:"spec.deploy.configurationManagement.master.configuration.script"})," path. Add there"]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'...\n        script: |-\n          ...\n          cp /opt/xebialabs/xl-deploy-server/xld-configuration-management/deployit.conf.template /opt/xebialabs/xl-deploy-server/default-conf/deployit.conf.template && echo "Changing the deployit.conf.template";\n        scriptData:\n          ...\n          deployit.conf.template: |-\n            # Template for non-HOCON XL Deploy configuration file\n            #\n            admin.password=${ADMIN_PASSWORD}\n            ...\n'})}),"\n",(0,i.jsx)(n.p,{children:"Note: This is the example of master configuration. Under spec.deploy.configurationManagement there are also worker and centralConfiguration sections."}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Save and apply changes from the CR file. Restart pods."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl rollout restart sts dai-xld-digitalai-deploy-master -n digitalai\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"custom-configuration-of-deploy-serveryamltemplate-from-cc-pods",children:"Custom configuration of deploy-server.yaml.template from cc pods"}),"\n",(0,i.jsx)(n.h3,{id:"steps-2",children:"Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Download current template configuration file that exists on cc Deploy pod that is running.\nFor example, if you want to update deploy-server.yaml.template, it is in the ",(0,i.jsx)(n.code,{children:"/opt/xebialabs/central-configuration-server/central-conf/deploy-server.yaml.template"})," in master pod."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl cp digitalai/dai-xld-digitalai-deploy-cc-server-0:/opt/xebialabs/central-configuration-server/central-conf/deploy-server.yaml.template .\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Update the CR file or CR on the cluster"}),"\n",(0,i.jsxs)(n.p,{children:["Use that file to update your CR file under ",(0,i.jsx)(n.code,{children:"spec.deploy.configurationManagement.centralConfiguration.configuration.scriptData"})," path. Add there the content of the ",(0,i.jsx)(n.code,{children:"deploy-server.yaml.template"})," file under the ",(0,i.jsx)(n.code,{children:"deploy-server.yaml.template"})," key."]}),"\n",(0,i.jsxs)(n.p,{children:["Also update the script under the ",(0,i.jsx)(n.code,{children:"spec.deploy.configurationManagement.centralConfiguration.configuration.script"})," path. Add there"]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'...\n        script: |-\n          ...\n          cp /opt/xebialabs/central-configuration-server/xld-configuration-management/deploy-server.yaml.template /opt/xebialabs/central-configuration-server/central-conf/deploy-server.yaml.template && echo "Changing the deploy-server.yaml.template";\n        scriptData:\n          ...\n          deploy-server.yaml.template: |-\n            deploy.server:\n            ...\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["If you have oidc enabled in CR, in that case disable it. Because the changes that are from there will conflict with your changes in the ",(0,i.jsx)(n.code,{children:"deploy-server.yaml.template"})," file."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Just in CR file put ",(0,i.jsx)(n.code,{children:"spec.oidc.enabled: false"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Note: when you disable oidc in CR, ",(0,i.jsx)(n.code,{children:"/opt/xebialabs/central-configuration-server/centralConfiguration/deploy-oidc.yaml"})," will be removed. For this reason, it is necessary to copy this file also. In ",(0,i.jsx)(n.code,{children:"spec.deploy.configurationManagement.centralConfiguration.configuration.script"})," you would have:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'...\n       script: |-\n         ...\n         cp /opt/xebialabs/central-configuration-server/xld-configuration-management/deploy-server.yaml.template /opt/xebialabs/central-configuration-server/central-conf/deploy-server.yaml.template && echo "Changing the deploy-server.yaml.template";\n         cp /opt/xebialabs/central-configuration-server/xld-configuration-management/deploy-oidc.yaml /opt/xebialabs/central-configuration-server/centralConfiguration/deploy-oidc.yaml && echo "Changing the deploy-oidc.yaml";\n       scriptData:\n         ...\n         deploy-server.yaml.template: |-\n           deploy.server:\n             ...\n         deploy-oidc.yaml: |-\n           deploy.security:\n             ...\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"Save and apply changes from the CR file. Restart pods."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl rollout restart sts dai-xld-digitalai-deploy-cc-server -n digitalai\nkubectl rollout restart sts dai-xld-digitalai-deploy-master -n digitalai\nkubectl rollout restart sts dai-xld-digitalai-deploy-worker -n digitalai\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const o={},l=i.createContext(o);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);