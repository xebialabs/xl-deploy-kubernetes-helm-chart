"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[766],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=i,f=d["".concat(u,".").concat(m)]||d[m]||s[m]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8697:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={sidebar_position:13},u="Building the operator image from helm chart",p={unversionedId:"building-operator-image",id:"building-operator-image",isDocsHomePage:!1,title:"Building the operator image from helm chart",description:"Build and publish with script",source:"@site/docs/building-operator-image.md",sourceDirName:".",slug:"/building-operator-image",permalink:"/xl-deploy-kubernetes-helm-chart/docs/building-operator-image",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Useful links",permalink:"/xl-deploy-kubernetes-helm-chart/docs/useful-links"},next:{title:"Make custom configuration for the Deploy",permalink:"/xl-deploy-kubernetes-helm-chart/docs/make-custom-configuration"}},c=[{value:"Build and publish with script",id:"build-and-publish-with-script",children:[],level:2},{value:"Build and publish with gradle",id:"build-and-publish-with-gradle",children:[],level:2}],s={toc:c};function d(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"building-the-operator-image-from-helm-chart"},"Building the operator image from helm chart"),(0,a.kt)("h2",{id:"build-and-publish-with-script"},"Build and publish with script"),(0,a.kt)("p",null,"Use script ",(0,a.kt)("inlineCode",{parentName:"p"},"build_operator.sh")," to build and publish operator image"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./build_operator.sh $RELEASE_EXPLICIT $DOCKER_HUB_REPOSITORY $BRANCH\n")),(0,a.kt)("p",null,"Where env variables are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RELEASE_EXPLICIT")," - version of them releasing image, use ",(0,a.kt)("inlineCode",{parentName:"li"},"22.0.0-114.1255")," pattern"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DOCKER_HUB_REPOSITORY")," - DockerHub repository name, default is ",(0,a.kt)("inlineCode",{parentName:"li"},"xebialabsunsupported")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"BRANCH_NAME")," - branch from where release will be done, default is ",(0,a.kt)("inlineCode",{parentName:"li"},"master")," ")),(0,a.kt)("h2",{id:"build-and-publish-with-gradle"},"Build and publish with gradle"),(0,a.kt)("p",null,"Use following task to release the image:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./gradlew clean publishToDockerHub --stacktrace\n")),(0,a.kt)("p",null,"With following variables you can influence on version and repository where release will be done:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RELEASE_EXPLICIT")," - version of them releasing image, use ",(0,a.kt)("inlineCode",{parentName:"li"},"22.0.0-114.1255")," pattern"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DOCKER_HUB_REPOSITORY")," - DockerHub repository name, default is ",(0,a.kt)("inlineCode",{parentName:"li"},"xebialabsunsupported"))))}d.isMDXComponent=!0}}]);