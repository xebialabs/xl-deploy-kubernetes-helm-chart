"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[25],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return g}});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var s=a.createContext({}),m=function(t){var e=a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},p=function(t){var e=m(t.components);return a.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,i=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),c=m(r),g=n,k=c["".concat(s,".").concat(g)]||c[g]||d[g]||i;return r?a.createElement(k,o(o({ref:e},p),{},{components:r})):a.createElement(k,o({ref:e},p))}));function g(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:n,o[1]=l;for(var m=2;m<i;m++)o[m]=r[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},9944:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return p},default:function(){return c}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),o=["components"],l={sidebar_position:10},s=void 0,m={unversionedId:"parameters",id:"parameters",isDocsHomePage:!1,title:"parameters",description:"This is internal documentation. This document can be used only if it was recommended by the Support Team.",source:"@site/docs/parameters.md",sourceDirName:".",slug:"/parameters",permalink:"/xl-deploy-kubernetes-helm-chart/docs/parameters",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"access-dashboard",permalink:"/xl-deploy-kubernetes-helm-chart/docs/access-dashboard"},next:{title:"development",permalink:"/xl-deploy-kubernetes-helm-chart/docs/development"}},p=[],d={toc:p};function c(t){var e=t.components,r=(0,n.Z)(t,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This is internal documentation. This document can be used only if it was recommended by the Support Team."))),(0,i.kt)("h1",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,"For deployment on Production environment, all parameters need to be configured as per users requirement and\nk8s setup which is under use. However, for deployment on test environment, most of the default values will suffice.\nThe following parameters are required to be configured and rest of the parameters may remain as default."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("strong",{parentName:"td"},"xldLicense")),(0,i.kt)("td",{parentName:"tr",align:"center"},"License for Digital.ai Deploy in base64 format")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("strong",{parentName:"td"},"Persistence.SorageClass")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Storage Class to be defined, Network File System (NFS) for OnPremise or Elastic File System (EFS) for AWS Elastic Kubernetes Service(EKS)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("strong",{parentName:"td"},"ingress.hosts")),(0,i.kt)("td",{parentName:"tr",align:"center"},"DNS name for accessing UI of Digital.ai Deploy")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("strong",{parentName:"td"},"RepositoryKeystore")),(0,i.kt)("td",{parentName:"tr",align:"center"},"RepositoryKeystore for Digital.ai Deploy in base64 format")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("strong",{parentName:"td"},"KeystorePassphrase")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Passphrase for RepositoryKeystore")))),(0,i.kt)("p",null,"The following table lists the configurable parameters of the Digital.ai Deploy chart, and their default values."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"K8sSetup.Platform"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Platform on which to install the chart. Allowed values are PlainK8s and AWSEKS"),(0,i.kt)("td",{parentName:"tr",align:"center"},"PlainK8s")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"XldMasterCount"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Number of master replicas"),(0,i.kt)("td",{parentName:"tr",align:"center"},"3")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"XldWorkerCount"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Number of worker replicas"),(0,i.kt)("td",{parentName:"tr",align:"center"},"3")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ServerImageRepository"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Image name for the Deploy master"),(0,i.kt)("td",{parentName:"tr",align:"center"},"xebialabs/xl-deploy")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"WorkerImageRepository"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Image name for the Deploy worker"),(0,i.kt)("td",{parentName:"tr",align:"center"},"xebialals/deploy-task-engine")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ImageTag"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Image tag"),(0,i.kt)("td",{parentName:"tr",align:"center"},"9.7")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ImagePullPolicy"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Image pull policy, Defaults to 'Always' if image tag is 'latest',set to 'IfNotPresent'"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Always")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ImagePullSecret"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Specify docker-registry secret names. Secrets must be manually created in the namespace"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"haproxy-ingress.install"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Install haproxy subchart. If you have haproxy already installed, set 'install' to 'false'"),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"haproxy-ingress.controller.kind"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Type of deployment, DaemonSet or Deployment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"DaemonSet")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"haproxy-ingress.controller.service.type"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Kubernetes Service type for haproxy. It can be changed to LoadBalancer or NodePort"),(0,i.kt)("td",{parentName:"tr",align:"center"},"NodePort")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ingress.Enabled"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Exposes HTTP and HTTPS routes from outside the cluster to services within the cluster"),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ingress.annotations"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Annotations for ingress controller"),(0,i.kt)("td",{parentName:"tr",align:"center"},'ingress.kubernetes.io/ssl-redirect: "false"',"\xa0"," ","\xa0"," ","\xa0"," kubernetes.io/ingress.class: haproxy ingress.kubernetes.io/rewrite-target: / ingress.kubernetes.io/affinity: cookie ingress.kubernetes.io/session-cookie-name: JSESSIONID ingress.kubernetes.io/session-cookie-strategy: prefix ingress.kubernetes.io/config-backend: `")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ingress.path"),(0,i.kt)("td",{parentName:"tr",align:"center"},"You can route an Ingress to different Services based on the path"),(0,i.kt)("td",{parentName:"tr",align:"center"},"/xl-deploy/")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ingress.hosts"),(0,i.kt)("td",{parentName:"tr",align:"center"},"DNS name for accessing ui of Digital.ai Deploy"),(0,i.kt)("td",{parentName:"tr",align:"center"},"example.com")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ingress.tls.secretName"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Secret file which holds the tls private key and certificate"),(0,i.kt)("td",{parentName:"tr",align:"center"},"example-secretsName")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"ingress.tls.hosts"),(0,i.kt)("td",{parentName:"tr",align:"center"},"DNS name for accessing ui of Digital.ai Deploy using tls"),(0,i.kt)("td",{parentName:"tr",align:"center"},"example.com")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"AdminPassword"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Admin password for xl-deploy"),(0,i.kt)("td",{parentName:"tr",align:"center"},"If user does not provide password, random 10 character alphanumeric string will be generated")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"xldLicense"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Convert xl-deploy.lic files content to base64"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"RepositoryKeystore"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Convert keystore.jks files content to base64"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"KeystorePassphrase"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Passphrase for keystore.jks file"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"resources"),(0,i.kt)("td",{parentName:"tr",align:"center"},"CPU/Memory resource requests/limits. User can change the parameter accordingly"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.install"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Installs postgresql chart with single instance. If you have an existing database deployment, set 'install' to 'false'."),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.postgresqlUsername"),(0,i.kt)("td",{parentName:"tr",align:"center"},"PostgreSQL user (creates a non-admin user when postgresqlUsername is not postgres)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"postgres")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.postgresqlPassword"),(0,i.kt)("td",{parentName:"tr",align:"center"},"PostgreSQL user password"),(0,i.kt)("td",{parentName:"tr",align:"center"},"random 10 character alphanumeric string")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.postgresqlExtendedConf.listenAddresses"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Specifies the TCP/IP address(es) on which the server is to listen for connections from client applications"),(0,i.kt)("td",{parentName:"tr",align:"center"},"*")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.postgresqlExtendedConf.maxConnections"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Maximum total connections"),(0,i.kt)("td",{parentName:"tr",align:"center"},"500")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.initdbScriptsSecret"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Secret with initdb scripts that contain sensitive information (Note: can be used with initdbScriptsConfigMap or initdbScripts). The value is evaluated as a template."),(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql-init-sql-xlr")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.service.port"),(0,i.kt)("td",{parentName:"tr",align:"center"},"PostgreSQL port"),(0,i.kt)("td",{parentName:"tr",align:"center"},"5432")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.persistence.enabled"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Enable persistence using PVC"),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.persistence.size"),(0,i.kt)("td",{parentName:"tr",align:"center"},"PVC Storage Request for PostgreSQL volume"),(0,i.kt)("td",{parentName:"tr",align:"center"},"50Gi")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.persistence.existingClaim"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Provide an existing PersistentVolumeClaim, the value is evaluated as a template."),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.resources"),(0,i.kt)("td",{parentName:"tr",align:"center"},"CPU/Memory resource requests/limits"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Memory: 256Mi, CPU: 250m")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.nodeSelector"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Node labels for pod assignment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"{}")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.affinity"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Affinity labels for pod assignment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"{}")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"postgresql.tolerations"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Toleration labels for pod assignment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"[","]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingDB.Enabled"),(0,i.kt)("td",{parentName:"tr",align:"center"},"If you want to use an existing database, change 'postgresql.install' to 'false'."),(0,i.kt)("td",{parentName:"tr",align:"center"},"false")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingDB.XL","_","DB","_","URL"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Database URL for xl-deploy"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingDB.XL","_","DB","_","USERNAME"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Database User for xl-deploy"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingDB.XL","_","DB","_","PASSWORD"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Database Password for xl-deploy"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.install"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Install rabbitmq chart. If you have an existing message queue deployment, set 'install' to 'false'."),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.rabbitmqUsername"),(0,i.kt)("td",{parentName:"tr",align:"center"},"RabbitMQ application username"),(0,i.kt)("td",{parentName:"tr",align:"center"},"guest")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.rabbitmqPassword"),(0,i.kt)("td",{parentName:"tr",align:"center"},"RabbitMQ application password"),(0,i.kt)("td",{parentName:"tr",align:"center"},"random 24 character long alphanumeric string")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.rabbitmqErlangCookie"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Erlang cookie"),(0,i.kt)("td",{parentName:"tr",align:"center"},"DEPLOYRABBITMQCLUSTER")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.rabbitmqMemoryHighWatermark"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Memory high watermark"),(0,i.kt)("td",{parentName:"tr",align:"center"},"500MB")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.rabbitmqNodePort"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Node port"),(0,i.kt)("td",{parentName:"tr",align:"center"},"5672")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.extraPlugins"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Additional plugins to add to the default configmap"),(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq_shovel, rabbitmq_shovel_management, rabbitmq_federation, rabbitmq_federation_management, rabbitmq_jms_topic_exchange, rabbitmq_management,")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.replicaCount"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Number of replica"),(0,i.kt)("td",{parentName:"tr",align:"center"},"3")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.rbac.create"),(0,i.kt)("td",{parentName:"tr",align:"center"},"If true, create & use RBAC resources"),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.service.type"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Type of service to create"),(0,i.kt)("td",{parentName:"tr",align:"center"},"ClusterIP")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.persistentVolume.enabled"),(0,i.kt)("td",{parentName:"tr",align:"center"},"If true, persistent volume claims are created"),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.persistentVolume.size"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Persistent volume size"),(0,i.kt)("td",{parentName:"tr",align:"center"},"20Gi")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.persistentVolume.annotations"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Persistent volume annotations"),(0,i.kt)("td",{parentName:"tr",align:"center"},"{}")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.persistentVolume.resources"),(0,i.kt)("td",{parentName:"tr",align:"center"},"CPU/Memory resource requests/limits"),(0,i.kt)("td",{parentName:"tr",align:"center"},"{}")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.definitions.policies"),(0,i.kt)("td",{parentName:"tr",align:"center"},"HA policies to add to definitions.json"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},'{"name": "ha-all","pattern": ".*","vhost": "/","definition": {"ha-mode": "all","ha-sync-mode": "automatic", "ha-sync-batch-size": 1 } }'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.definitions.globalParameters"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Pre-configured global parameters"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},'{"name": "cluster_name", "value": "" }'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"rabbitmq-ha.prometheus.operator.enabled"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Enabling Prometheus Operator"),(0,i.kt)("td",{parentName:"tr",align:"center"},"false")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingMQ.Enabled"),(0,i.kt)("td",{parentName:"tr",align:"center"},"If you want to use an existing Message Queue, change 'rabbitmq-ha.install' to 'false'"),(0,i.kt)("td",{parentName:"tr",align:"center"},"false")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingMQ.XLD","_","TASK","_","QUEUE","_","USERNAME"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Username for xl-deploy task queue"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingMQ.XLD","_","TASK","_","QUEUE","_","PASSWORD"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Password for xl-deploy task queue"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingMQ.XLD","_","TASK","_","QUEUE","_","URL"),(0,i.kt)("td",{parentName:"tr",align:"center"},"URL for xl-deploy task queue"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"UseExistingMQ.XLD","_","TASK","_","QUEUE","_","DRIVER","_","CLASS","_","NAME"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Driver Class Name for xl-deploy task queue"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"HealthProbes"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Would you like a HealthProbes to be enabled"),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"HealthProbesLivenessTimeout"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Delay before liveness probe is initiated"),(0,i.kt)("td",{parentName:"tr",align:"center"},"90")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"HealthProbesReadinessTimeout"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Delay before readiness probe is initiated"),(0,i.kt)("td",{parentName:"tr",align:"center"},"90")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"HealthProbeFailureThreshold"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Minimum consecutive failures for the probe to be considered failed after having succeeded"),(0,i.kt)("td",{parentName:"tr",align:"center"},"12")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"HealthPeriodScans"),(0,i.kt)("td",{parentName:"tr",align:"center"},"How often to perform the probe"),(0,i.kt)("td",{parentName:"tr",align:"center"},"10")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"nodeSelector"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Node labels for pod assignment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"{}")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"tolerations"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Toleration labels for pod assignment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"[","]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"affinity"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Affinity labels for pod assignment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"{}")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Persistence.Enabled"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Enable persistence using PVC"),(0,i.kt)("td",{parentName:"tr",align:"center"},"true")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Persistence.StorageClass"),(0,i.kt)("td",{parentName:"tr",align:"center"},"PVC Storage Class for volume"),(0,i.kt)("td",{parentName:"tr",align:"center"},"nil")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Persistence.Annotations"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Annotations for the PVC"),(0,i.kt)("td",{parentName:"tr",align:"center"},"{}")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Persistence.AccessMode"),(0,i.kt)("td",{parentName:"tr",align:"center"},"PVC Access Mode for volume"),(0,i.kt)("td",{parentName:"tr",align:"center"},"ReadWriteOnce")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Persistence.XldExportPvcSize"),(0,i.kt)("td",{parentName:"tr",align:"center"},"XLD Master PVC Storage Request for volume. For production grade setup, size must be changed"),(0,i.kt)("td",{parentName:"tr",align:"center"},"10Gi")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Persistence.XldWorkPvcSize"),(0,i.kt)("td",{parentName:"tr",align:"center"},"XLD Worker PVC Storage Request for volume. For production grade setup, size must be changed"),(0,i.kt)("td",{parentName:"tr",align:"center"},"5Gi")))))}c.isMDXComponent=!0}}]);