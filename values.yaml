# Default values for xl-deploy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# No. of XL-Deploy master and worker pods to run.
xldMasterCount: 3
xldWorkerCount: 3

## XL-Deploy image version
## Ref: https://hub.docker.com/r/xebialabs/xl-deploy/tags
imageRepository: "xebialabs/xl-deploy"
imageTag: "10.2.4"

## Specify a imagePullPolicy
## Defaults to 'Always' if image tag is 'latest',set to 'IfNotPresent'
imagePullPolicy: "Always"

## Ref: https://docs.openshift.com/container-platform/4.5/networking/routes/route-configuration.html
route:
  enabled: true
  annotations:
    haproxy.router.openshift.io/cookie_name: SESSION_XLD
    haproxy.router.openshift.io/disable_cookies: "false"
    haproxy.router.openshift.io/rewrite-target: /
  path: /
  hosts:
    - app.example.com

## By default only Edge Termination is supported with Deploy.
## To configure SSL/TLS with Deploy uncomment the below tls section and provide the private key, certificate and optional caCertificate.
## The allowed values for insecureEdgeTerminationPolicy are: None or empty (for disabled), Allow or Redirect
## Ref: https://docs.openshift.com/container-platform/4.5/networking/routes/secured-routes.html
#  tls:
#    key: |-
#      -----BEGIN PRIVATE KEY-----
#      -----END PRIVATE KEY-----
#    certificate: |-
#      -----BEGIN CERTIFICATE-----
#      -----END CERTIFICATE-----
#    caCertificate: |-
#      -----BEGIN CERTIFICATE-----
#      -----END CERTIFICATE-----
#    insecureEdgeTerminationPolicy: Redirect

# https://docs.xebialabs.com/v.10.2/deploy/docker/docker-environment-variables/
# Provide the admin password to be used
# It will create a random alphanumeric password, if you leave this field empty.
adminPassword:

# Convert xl-deploy.lic files content to base64 ( cat xl-deploy.lic | base64 -w 0 ) and put the output here
# You will get a trail-license, if you leave this field empty
xldLicense:

# https://docs.xebialabs.com/v.10.2/deploy/how-to/changing-passwords-in-xl-deploy/
# Convert repository-keystore.jceks files content to base64 ( cat repository-keystore.jceks | base64 -w 0 ) and put the output here
# If you don't want you provide the repository-keystore explicitly, leave this field empty
repositoryKeystore:

# Passphrase for repository-keystore.jceks file
# Depends upon the above field. Leave it empty, if you dont want to provide a repository-keystore file.
keystorePassphrase:

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 3
  #  memory: 3Gi
  # requests:
  #  cpu: 0.7
  #  memory: 1700Mi

## Ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/README.md
## Install postgresql chart. If you have an existing database deployment, set 'install' to 'false'.
postgresql:
  install: true
  initdbScriptsSecret: "postgresql-init-sql-xld"
  image:
    pullSecrets: []
  persistence:
    enabled: true
    storageClass: "-"
    size: 8Gi
    existingClaim: ""
  postgresqlUsername: postgres
  postgresqlPassword: ""
  postgresqlMaxConnections: ""
  service:
    type: ClusterIP
    port: 5432
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
  volumePermissions:
    securityContext:
      runAsUser: "auto"
  securityContext:
    enabled: false
  containerSecurityContext:
    enabled: false
  shmVolume:
    chmod:
      enabled: false

# https://docs.xebialabs.com/v.10.2/deploy/how-to/configure-the-xl-deploy-sql-repository/
# If you want to use an existing database, change 'postgresql.install' to 'false'.
# Set 'useExistingDB.enabled' to 'true'and provide the values.
useExistingDB:
  enabled: false
  XL_DB_URL:
  XL_DB_USERNAME:
  XL_DB_PASSWORD:

## Install rabbitmq chart. If you have an existing message queue deployment, set 'install' to 'false'.
## ref: https://github.com/bitnami/charts/blob/master/bitnami/rabbitmq/README.md
rabbitmq:
  install: true
  replicaCount: 3
  image:
    pullSecrets: []
  auth:
    username: guest
    password: guest
    erlangCookie: DEPLOYRABBITMQCLUSTER
  extraPlugins: 'rabbitmq_jms_topic_exchange'
  extraSecrets:
    xld-load-definition:
      xld-load_definition.json: |
        {
        "users": [
          {
              "name": "{{ .Values.auth.username }}",
              "password": "{{ .Values.auth.password }}",
              "tags": "administrator"
          }
          ],
        "vhosts": [
          {
            "name": "/"
          }
          ],
          "permissions": [
          {
            "user": "{{ .Values.auth.username }}",
            "vhost": "/",
            "configure": ".*",
            "write": ".*",
            "read": ".*"
          }
          ],
        "global_parameters": [
          {
            "name": "cluster_name",
            "value": ""
          }
          ],
         "policies": [
            {
              "name": "ha-all",
              "apply-to": "all",
              "pattern": ".*",
              "vhost": "/",
              "definition": {
                "ha-mode": "all",
                "ha-sync-mode": "automatic",
                "ha-sync-batch-size": 1
              }
            }
          ]
        }
  loadDefinition:
    enabled: true
    existingSecret: xld-load-definition
  extraConfiguration: |
    load_definitions = /app/xld-load_definition.json
  persistence:
    enabled: true
    storageClass: "-"
    size: 8Gi
  service:
    type: ClusterIP
  volumePermissions:
    enabled: true

# If you want to use a existing Message Queue, change the "rabbitmq.install to false"
# Set 'useExistingMQ.enabled' to 'true' and provide the values.
useExistingMQ:
  enabled: false
  XLD_TASK_QUEUE_USERNAME:
  XLD_TASK_QUEUE_PASSWORD:
  XLD_TASK_QUEUE_URL:
  XLD_TASK_QUEUE_DRIVER_CLASS_NAME:

## Configure extra options for liveness and readiness probes
healthProbes: true
healthProbesLivenessTimeout: 60
healthProbesReadinessTimeout: 60
healthProbeFailureThreshold: 12
healthPeriodScans: 10

nodeSelector: {}

tolerations: []

## Affinity and anti-affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## XL Deploy data Persistent Volume for 'XL Deploy masters and workers'
## If "Persistence.Enabled" set to "false", it will create an emptyDir volume.
## Choose storage class provided by your cloud provider, example "ssd" on GKE, AWS and OpenStack
persistence:
  enabled: true
  storageClass: "-"
  annotations: {}
  accessMode: ReadWriteOnce
  xldMasterPvcSize: 10Gi
  xldWorkerPvcSize: 10Gi

# Set "satellite.Enabled" value to "true" to use the "XL Satellite" feature
satellite:
  enabled: false

# OIDC Settings
oidc:
  enabled: false
  clientId:
  clientSecret:
  issuer:
  keyRetrievalUri:
  accessTokenUri:
  userAuthorizationUri:
  logoutUri:
  redirectUri:
  postLogoutRedirectUri:
  rolesClaimName:
  userNameClaimName:
